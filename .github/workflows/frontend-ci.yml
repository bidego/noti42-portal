name: Frontend CI/CD

on:
#  push:
#    branches:
#      - main
#      - master
#    paths:
#      - 'frontend/**'
#      - 'bff/**'
  
  push:
      tags:
        - '*v*.*.*'
  workflow_dispatch: 

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.set.outputs.frontend }}
      bff: ${{ steps.set.outputs.bff }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Necesario para diff entre commits/tags
      - id: set
        run: |
          LAST_COMMIT=$(git rev-parse HEAD)
          PREV_COMMIT=$(git rev-list --tags --skip=1 --max-count=1)

          echo "Last tag commit: $LAST_COMMIT"
          echo "Previous tag commit: $PREV_COMMIT"

          CHANGED=$(git diff --name-only $PREV_COMMIT $LAST_COMMIT || true)

          echo "$CHANGED"

          if echo "$CHANGED" | grep -q "^frontend/"; then
            echo "frontend=true" >> $GITHUB_OUTPUT
          else
            echo "frontend=false" >> $GITHUB_OUTPUT
          fi

          if echo "$CHANGED" | grep -q "^bff/"; then
            echo "bff=true" >> $GITHUB_OUTPUT
          else
            echo "bff=false" >> $GITHUB_OUTPUT
          fi

  build-bff:
    needs: detect-changes
    if: needs.detect-changes.outputs.bff == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./bff
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install BFF dependencies
      run: npm install

    - name: Build BFF
      run: npm run build

    - name: Check BFF Build
      run: ls -la

    - name: Upload BFF build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bff-build
        path: ./bff/dist

  deploy-bff:
    runs-on: ubuntu-latest
    needs: build-bff
    environment: prod
    defaults:
      run:
        working-directory: ./
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download BFF build artifacts
      uses: actions/download-artifact@v4
      with:
        name: bff-build
        path: ./bff-build-artifact/

    - name: Configure GCP credentials
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Deploy BFF to VM
      run: |
        echo "Deploying BFF to GCP VM..."
        gcloud compute ssh ${{ env.VM_NAME }} --zone=${{ env.ZONE }} --command="mkdir -p /tmp/bff_dist"
        gcloud compute scp --recurse ./bff-build-artifact/* ${{ env.VM_NAME }}:/tmp/bff_dist --zone=${{ env.ZONE }}
        gcloud compute ssh ${{ env.VM_NAME }} --zone=${{ env.ZONE }} --command="docker cp /tmp/bff_dist/. ${{ env.CONTAINER_ID }}:/app/bff/dist && rm -rf /tmp/bff_dist"
      env:
        VM_NAME: ${{ vars.VM_NAME }}
        ZONE: ${{ vars.ZONE }}
        CONTAINER_ID: ${{ vars.CONTAINER_ID }}

  build-frontend:
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend == 'true' && needs.detect-changes.outputs.bff == 'false'
    runs-on: ubuntu-latest
    environment: prod
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install frontend dependencies
      run: npm install

    - name: Get frontend version
      id: get_version
      run: echo "VITE_APP_VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

    - name: Build frontend
      env:
        VITE_GA_MEASUREMENT_ID: ${{ vars.VITE_GA_MEASUREMENT_ID }}
        VITE_APP_VERSION: ${{ env.VITE_APP_VERSION }}
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: dist/

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: build-frontend
    environment: prod
    defaults:
      run:
        working-directory: ./

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: ./frontend-build-artifact/

    - name: Configure GCP credentials
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Deploy frontend to VM
      run: |
        echo "Deploying frontend to GCP VM..."
        gcloud compute ssh ${{ env.VM_NAME }} --zone=${{ env.ZONE }} --command="mkdir -p /tmp/frontend_dist"
        gcloud compute scp --recurse ./frontend-build-artifact/* ${{ env.VM_NAME }}:/tmp/frontend_dist --zone=${{ env.ZONE }}
        gcloud compute ssh ${{ env.VM_NAME }} --zone=${{ env.ZONE }} --command="docker cp /tmp/frontend_dist/. ${{ env.CONTAINER_ID }}:/app/bff/dist/public && rm -rf /tmp/frontend_dist"
      env:
        VM_NAME: ${{ vars.VM_NAME }}
        ZONE: ${{ vars.ZONE }}
        CONTAINER_ID: ${{ vars.CONTAINER_ID }}